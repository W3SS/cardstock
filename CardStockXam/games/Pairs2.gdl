;; Pairs in the GDL
(game
    (declare 'NUMP 4)
    (setup  
     ;; Set up the players, 3 players each on their own team
      (create players 'NUMP)
      (create teams (0) (1) (2) (3))

      ;; Create the deck source
      (create deck (game iloc STOCK) (deck 1 (value (1))))         
      (create deck (game iloc STOCK) (deck 2 (value (2))))         
      (create deck (game iloc STOCK) (deck 3 (value (3))))         
      (create deck (game iloc STOCK) (deck 4 (value (4))))         
      (create deck (game iloc STOCK) (deck 5 (value (5))))         
      (create deck (game iloc STOCK) (deck 6 (value (6))))         
      (create deck (game iloc STOCK) (deck 7 (value (7))))         
      (create deck (game iloc STOCK) (deck 8 (value (8))))         
      (create deck (game iloc STOCK) (deck 9 (value (9))))         
      (create deck (game iloc STOCK) (deck 10 (value (10))))         
   )
     
    
   (do (
        (put points 'POINTS (
             (all (value (10)) 10)
             (all (value (9)) 9)
             (all (value (8)) 8)
             (all (value (7)) 7)
             (all (value (6)) 6)
             (all (value (5)) 5)
             (all (value (4)) 4)
             (all (value (3)) 3)
             (all (value (2)) 2)
             (all (value (1)) 1)
             )
         )
         (shuffle (game iloc STOCK))
         (repeat 5 (move (top (game iloc STOCK))
                         (top (game iloc THROWOUT))))

        )
   )
   (stage player
      (end (any player 'P (>= (sum ('P vloc SCORING) using 'POINTS) 16)))      
      (do  
         ((< (size (game iloc STOCK)) 'NUMP)
            (do (
                (repeat (size (game iloc THROWOUT))
                      (move (top (game iloc THROWOUT))
                            (top (game iloc STOCK))))
                (repeat (size (game vloc DISCARD))
                      (move (top (game vloc DISCARD))
                            (top (game iloc STOCK))))
                (shuffle (game iloc STOCK))
                (repeat 5 (move (top (game iloc STOCK))
                      (top (game iloc THROWOUT))))
            ))
         )
         (all player 'P (move (top (game iloc STOCK))
		             (top ('P vloc HAND))))
           
           ;; Stage here, find the player with smallest card
           ;; if tied, deal new card and try again
           ;; Stage, for tied players if dealt a pair, then discard and do it again
         (cycle current (owner (min (union (all player 'P ('P vloc HAND))) using 'POINTS)))
     )
   )
      
   ;; Stages of the game
   (stage player
             
         ;; end when any player has a pair or bows out
         (end (== (game sto FINISHED) 1))
         
         (do (
            ((== (size (game iloc STOCK)) 0)
             (do (
                (repeat (size (game iloc THROWOUT))
                      (move (top (game iloc THROWOUT))
                            (top (game iloc STOCK))))
                (repeat (size (game vloc DISCARD))
                      (move (top (game vloc DISCARD))
                            (top (game iloc STOCK))))
                (shuffle (game iloc STOCK))
                (repeat 5 (move (top (game iloc STOCK))
                      (top (game iloc THROWOUT))))
           )))
         ))
         ;; players flip a card or bow out
      (choice (
        (do (
            (move (actual (min (union (all player 'P ('P vloc HAND))) using 'POINTS))
                  (top ((current player) vloc SCORING)))
            (set (game sto FINISHED) 1)
            (move (top (game iloc STOCK))
                  (top ((current player) vloc HAND)))
        ))
         
         ;; if pair, end the round
		 ;; current player is similar to how all players was used previously, is this ok?
         (do (
            ((> (size (tuples 2 ((current player) vloc HAND) using 'POINTS)) 0)
              (do (
                (set (game sto FINISHED) 1)
                (move (actual (top (top (tuples 2 ((current player) vloc HAND) using 'POINTS))))
                              (top ((current player) vloc SCORING))))
             ))
          ))
      ))
      ;; Move all cards back to the discard pile
      (do (
        (all player 'P
             (repeat (size ('P vloc HAND))
                   (move (top ('P vloc HAND))
                         (top (game vloc DISCARD)))))
        (set (game sto FINISHED) 0)
      ))    
   )   
         
   (scoring min (sum ((current player) vloc SCORING) using 'POINTS))
)
