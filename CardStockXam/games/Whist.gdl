;; Whist in the GDL
(game

   (setup 
      ;; Set up the players, 2 teams of 2 players, alternating
      (create players 4)
      (create teams (0, 2) (1, 3))

      ;; Create the deck source
      (create deck (game vloc DISCARD) (deck (rank (A, 2, 3, 4, 5, 6, 7, 8, 9, 10, J, Q, K))
                                            (color (RED (suit (HEARTS, DIAMONDS)))
                                                   (BLACK (suit (CLUBS, SPADES))))))         
   )
               
   ;; Stages of the game
   (stage player
      (end (any team 'T (>= ('T sto SCORE) 10)))
      (do (
         (move (top (game vloc DISCARD)) 
                   (top (game iloc STOCK)) all)
         (shuffle (game iloc STOCK))
         (move (top (game iloc STOCK))
                   (top ((all player) iloc HAND)) 13)
         (set ((all player) sto TRICKSWON) 0)
         (remember (top ((current player) iloc HAND))
                       (top (game mem TRUMP)))
      ))
         
      ;; players play a round 13 times     
      (stage player
         (end (all player 'P (== (size ('P iloc HAND)) 0)))
                    
         ;; players play a hand once
         (stage player
            (end (all player 'P2(> (size ('P2 vloc TRICK)) 0)))
             
            (choice (

               ;; if following player and cannot follow suit
               ;;   play any card, and end your turn
               ((and (== (size (game mem LEAD)) 1)
                     (== (size ((current player) iloc HAND where (all (== (cardatt suit each) 
                                                                         (cardatt suit (top (game mem LEAD))))))) 0))
                 (any ((current player) iloc HAND) 'C
                    (move 'C (top ((current player) vloc TRICK)))))

               ;; if following player and can follow suit
               ;;   play any card that follows suit, and end your turn
               (any ((current player) iloc HAND where (all (== (cardatt suit each)
                                                               (cardatt suit (top (game mem LEAD)))))) 'C
                ((== (size (game mem LEAD)) 1)
                   (move 'C (top ((current player) vloc TRICK)))))
                      
               ;; if first player, play any card, remember it in the lead spot, and end your turn
               ((== (size (game mem LEAD)) 0)
                 (do (
                    (any ((current player) iloc HAND) 'C
                           (move 'C (top ((current player) vloc TRICK))))
                    (remember (top ((current player) vloc TRICK)) 
                          (top (game mem LEAD))))))  
           ))
         )
              
         ;; after players play hand, computer wraps up trick
         (do (
                 ;; solidfy card recedence
                 (initialize points 'PRECEDENCE (
                               (all (suit (cardatt suit (top (game mem TRUMP)))) 200)
                               (all (suit (cardatt suit (top (game mem LEAD)))) 100)
                               (all (rank (A)) 14)
                               (all (rank (K)) 13) 
                               (all (rank (Q)) 12)
                               (all (rank (J)) 11)
                               (all (rank (10)) 10)
                               (all (rank (9)) 9)
                               (all (rank (8)) 8)
                               (all (rank (7)) 7)
                               (all (rank (6)) 6)
                               (all (rank (5)) 5)
                               (all (rank (4)) 4)
                               (all (rank (3)) 3)
                               (all (rank (2)) 2)
                               )
                               )             
                      
                 ;; determine who won the hand, set them first next time, and give them a point
              (forget (top (game mem LEAD)))
              (cycle next (owner (max (union ((all player) vloc TRICK)) using PRECEDENCE)))
              (inc ((next player) sto TRICKSWON) 1)                 
             ;; discard all the played cards
              (all player 'P
                      (move (top ('P vloc TRICK)) 
                        (top (game vloc DISCARD))))
             
         ))
      )
         
      ;; determine team score
      (stage team
         (end (all player 'P(== ('P sto TRICKSWON) 0)))
         (do (
          
            ;; team made their cumulative bid, score positive points
           (set ((current team) sto TRICKSWON) 0)
           (all (current team) 'P
               (inc ((current team) sto TRICKSWON) ('P sto TRICKSWON)))
             ((> ((current team) sto TRICKSWON) 6)
               (inc ((current team) sto SCORE) (- ((current team) sto TRICKSWON) 6)))
           (all (current team) 'P
            (set ('P sto TRICKSWON) 0))
         ))
      )
   )
   (scoring max (((current player) team) sto SCORE))
)
         
         
      
