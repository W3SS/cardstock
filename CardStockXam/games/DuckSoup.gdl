;; Duck Soup in the GDL
(game
 (declare 2 'NUMP)

 (setup
  (create players 'NUMP)
  (create teams (0) (1))
  (create deck (game iloc STOCK) (deck (RANK (A, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN,
                                               J, Q, K))
                                          (COLOR (RED (SUIT (HEARTS, DIAMONDS)))
                                                 (BLACK (SUIT (SPADES, CLUBS)))
                                                 )))
  
  )
 (do (
      (put points 'DUCK (
             ((SUIT (cardatt SUIT (top (game mem LEAD)))) 100)
             ((RANK (A)) 1)
             ((RANK (K)) 13) 
             ((RANK (Q)) 12)
             ((RANK (J)) 11)
             ((RANK (TEN)) 10)
             ((RANK (NINE)) 9)
             ((RANK (EIGHT)) 8)
             ((RANK (SEVEN)) 7)
             ((RANK (SIX)) 6)
             ((RANK (FIVE)) 5)
             ((RANK (FOUR)) 4)
             ((RANK (THREE)) 3)
             ((RANK (TWO)) 2)))
      (put points 'SOUP (
             ((SUIT (cardatt SUIT (top (game mem LEAD)))) 100)
             ((RANK (A)) 14)
             ((RANK (K)) 13) 
             ((RANK (Q)) 12)
             ((RANK (J)) 11)
             ((RANK (TEN)) 10)
             ((RANK (NINE)) 9)
             ((RANK (EIGHT)) 8)
             ((RANK (SEVEN)) 7)
             ((RANK (SIX)) 6)
             ((RANK (FIVE)) 5)
             ((RANK (FOUR)) 4)
             ((RANK (THREE)) 3)
             ((RANK (TWO)) 2)))
      (shuffle (game iloc STOCK))
      (all player 'P
           (repeat 13
                   (move (top (game iloc STOCK))
                         (top ('P iloc HAND)))))
      (set (game sto ISDUCK) 1)
      ))
 
                    
                    
 
 (stage player
        (end (and (all player 'P (== (size ('P iloc HAND)) 0))
                  (== (size (game iloc STOCK)) 0)))
        (stage player
               (end (all player 'P (== ('P sto FINISHED) 1)))
               (choice (
                 
                        ;; handle quacking  -  maybe doesn't work ?????
                        ((any player 'P (>= (size ('P vloc TRICK)) 1))
                              
                         (any (filter ((current player) iloc HAND) 'NH
                                      (== (cardatt RANK 'NH)
                                          (cardatt RANK (top ((current player) vloc TRICK))))) 'C
                                                                                               
                                                                                               (do (
                                                                                                    ;; say quack/quack-quack
                                                                                                    (move 'C (top ((current player) vloc TRICK)))
                                                                                                    (set ((current player) sto QUACKED) 1)
                                                                                                    (set ((next player) sto QUACKED) 0)))))
                        ((and (any player 'P (>= (size ('P vloc TRICK)) 1))
                              (any player 'P (== ('P sto QUACKED) 1)))
                         (any (filter ((current player) iloc HAND) 'NH
                                      (== (cardatt RANK 'NH)
                                          (cardatt RANK (top ((current player) vloc TRICK))))) 'C
                                                                                               (do (
                                                                                                    ;; bow out
                                                                                                    (set ((current player) sto FINISHED) 1)
                                                                                                    (set ((next player) sto FINISHED) 1)))))
                                     
                        (do (
                             (any ((current player) iloc HAND) 'C
                                  (move 'C (top ((current player) vloc TRICK))))
                             ((== (size (game mem LEAD)) 0)
                              (remember (top ((current player) vloc TRICK)) 
                                        (top (game mem LEAD))))
                             (set ((current player) sto FINISHED) 1)))))
               ;; draw card if in duck stage
               (do (
                    ((== (game sto ISDUCK) 1)
                     (move (top (game iloc STOCK))
                           (top ((current player) iloc HAND)))))))
        ;; had to put in do block here for no reason
        (do (
             (all player 'P
                  (set ('P sto FINISHED) 0))
             ((== (game sto ISDUCK) 1)
              (do (
                            
                   ;; score regular hand
                            
                   ((all player 'P (== ('P sto QUACKED) 0))
                    (do (
                         (cycle next (owner (max (union (all player 'P ('P vloc TRICK))) using 'DUCK)))
                         (forget (top (game mem LEAD)))
                         ((== (cardatt SUIT (top ((current player) vloc TRICK)))
                              (cardatt SUIT (top ((next player) vloc TRICK))))
                          (inc ((next player) sto DUCKSCORE) 1))
                         ((!= (cardatt SUIT (top ((current player) vloc TRICK)))
                              (cardatt SUIT (top ((next player) vloc TRICK))))
                          (inc ((next player) sto DUCKSCORE) 2)))))
                   ;; score quack hand
                   (all player 'P
                        ((== ('P sto QUACKED) 1)
                         (do (
                              
                              (cycle next (owner (top ('P vloc TRICK))))
                              ((all player 'Q (== (size ('Q vloc TRICK)) 2))
                               (inc ((next player) sto DUCKSCORE) 4))
                              ((any player 'Q (< (size ('Q vloc TRICK)) 2))
                               (inc ((next player) sto DUCKSCORE) 2))
                              (set ('P sto QUACKED) 0)))))
                   ;; change stage if needed
                    
                   (do (
                        (all player 'P
                             (repeat all
                                     (move (top ('P vloc TRICK))
                                           (top (game vloc DISCARD))))))))))
             ((== (game sto ISDUCK) 0)
              (do (
                           
                   ;; score regular hand
                   ((all player 'P (== ('P sto QUACKED) 0))
                    (do (
                         (cycle next (owner (max (union (all player 'P ('P vloc TRICK))) using 'SOUP)))
                         (forget (top (game mem LEAD)))
                         ((== (cardatt SUIT (top ((current player) vloc TRICK)))
                              (cardatt SUIT (top ((next player) vloc TRICK))))
                          (inc ((next player) sto SOUPSCORE) 1))
                         ((!= (cardatt SUIT (top ((current player) vloc TRICK)))
                              (cardatt SUIT (top ((next player) vloc TRICK))))
                          (inc ((next player) sto SOUPSCORE) 2)))))
                   ;; score quack hand
                   (all player 'P
                        ((== ('P sto QUACKED) 1)
                         (do (
                              ;; problem here w cycle next 'p... above too
                              (cycle next (owner (top ('P vloc TRICK))))
                              ((all player 'Q (== (size ('Q vloc TRICK)) 2))
                               (inc ((next player) sto SOUPSCORE) 4))
                              ((any player 'Q (< (size ('Q vloc TRICK)) 2))
                               (inc ((next player) sto SOUPSCORE) 2))
                              (set ('P sto QUACKED) 0)))))
                   (all player 'P
                        (repeat all
                                (move (top ('P vloc TRICK))
                                      (top (game vloc DISCARD))))))))
             ((== (size (game iloc STOCK)) 0)
              (do (
                   (set (game sto ISDUCK) 0))))
             )))
(scoring max (* ((current player) sto DUCKSCORE) ((current player) sto SOUPSCORE)))
 
)
