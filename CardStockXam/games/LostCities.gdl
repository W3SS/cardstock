;; Lost Cities in the GDL
(game

   (setup 
      ;; Set up the players, 2 teams of 2 players, alternating
      (create players 2)
      (create teams (0) (1))
      ;; Create the deck source
      (create deck (game iloc STOCK) (deck (rank (2, 3, 4, 5, 6, 7, 8, 9, 10))
                                                     (COLOR (WHITE, BLUE, GREEN, RED, YELLOW))))
      (create deck (game iloc STOCK) (deck 3 (rank (HS))
                                                     (COLOR (WHITE, BLUE, GREEN, RED, YELLOW))))
   )
   (comp (()
          (set (game sto ROUNDS) 0)
          ;; solidfy card recedence
                 (initialize points PRECEDENCE (
                               
                               (all (rank (10)) 10)
                               (all (rank (9)) 9)
                               (all (rank (8)) 8)
                               (all (rank (7)) 7)
                               (all (rank (6)) 6)
                               (all (rank (5)) 5)
                               (all (rank (4)) 4)
                               (all (rank (3)) 3)
                               (all (rank (2)) 2)
                               )
                               )
                 (initialize points MULTIPLIER (
                                                
                                                (all (rank (HS)) 1)
                                                )
                             )
                 )
         )       
   ;; Stages of the game
   
   (stage player
          
          
      (end (== (game sto ROUNDS) 1))
      (comp (() (shuffle (game iloc STOCK))
                (move (top (game iloc STOCK))
                      (top ((all player) iloc HAND)) 8)
             )
      ) 
         
      
      ;; players play a hand once
      (stage player
             (end (== (size (game iloc STOCK)) 0))
             
               
              ;; Play a card from your hand
              (all (WHITE, BLUE, GREEN, RED, YELLOW) C
                 (let (where ((current player) iloc HAND) MC (== (cardatt COLOR MC) C)) MYCOLOR
                  (choice
                   
                    ((> (size MYCOLOR) 0)                    
                     (any MYCOLOR AC
                      (move AC
                            (top (game vloc C)))
                      (set (game sto C) 1)))     
                          
                    ((and (== (size ((current player) vloc C)) 0)
                          (> (size MYCOLOR) 0))               
                     (any MYCOLOR AC
                      (move AC
                            (top ((current player) vloc C)))))        
 
                    (let (where MYCOLOR MC2 (> (score MC2 using PRECEDENCE)
                                               (score (top ((current player) vloc C)) using PRECEDENCE))) MYCOLORBIG
                    ((and (> (size ((current player) vloc C)) 0) 
                          (> (size MYCOLORBIG) 0))
                     (any MYCOLORBIG AC 
                      (move AC 
                            (top ((current player) vloc C))))))
              
              )    
           )    
         )
             
             ;; Draw a card
         (choice 
         (()
          (move (top (game iloc STOCK))
               (top ((current player) iloc HAND))))
          (all (WHITE, BLUE, GREEN, RED, YELLOW) C
          ((and (> (size (game vloc C)) 0)
                (!= (game sto C) 1))
           (move (top (game vloc C))
                 (top ((current player) iloc HAND)))))
          
          )
         
         ;; Reset the marker for what card was played to the table
         (comp
          (all (WHITE, BLUE, GREEN, RED, YELLOW) C

          (()
           (set (game sto C) 0)
          )
          )
         )
         ;; after players play hand, computer wraps up trick
         
       )
      (stage player ;;scoring
         (end (all player P (== (P sto PROC) 1)))
         (comp
          (all (WHITE, BLUE, GREEN, RED, YELLOW) C

          
          ((> (size ((current player) vloc C)) 0)
         (inc ((current player) sto SCORE) (* (- (sum ((current player) vloc C) using PRECEDENCE) 20) (+ (sum ((current player) vloc C) using MULTIPLIER) 1)))
         ))
         (()
             (set ((current player) sto PROC) 1)
             (repeat (size ((current player) iloc HAND))
                  (move (top ((current player) iloc HAND))
                        (top (game iloc STOCK)) all))
             (all (WHITE, BLUE, GREEN, RED, YELLOW) C

             (repeat (size ((current player) vloc C)) 
                  (move (top ((current player) vloc C))
                        (top (game iloc STOCK)) all))
         )
         )
          ))
         (comp
            (()
             (all (WHITE, BLUE, GREEN, RED, YELLOW) C

            (repeat (size (game vloc C)) (move (top (game vloc C))
                  (top (game iloc STOCK)))))
            (inc (game sto ROUNDS) 1)
            (set ((all player) sto PROC) 0)
            )
         )
      )
      
       
   
   (scoring max ((current player) sto SCORE))
)
         
         
      
