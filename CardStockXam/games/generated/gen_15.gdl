(game
    (declare 5 'A)
    (setup
      (create players 2)
      (create teams (0) (1))
      (create deck (game vloc A) (deck (RANK (A, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN, J, Q, K))
                                             (COLOR (RED (SUIT (HEARTS, DIAMONDS)))
                                                   (BLACK (SUIT (CLUBS, SPADES))))))
   )
   (do (
        (put points 'POINTS (

                               ((RANK (A)) 14)
                               ((RANK (K)) 13)
                               ((RANK (Q)) 12)
                               ((RANK (J)) 11)
                               ((RANK (TEN)) 10)
                               ((RANK (NINE)) 9)
                               ((RANK (EIGHT)) 8)
                               ((RANK (SEVEN)) 7)
                               ((RANK (SIX)) 6)
                               ((RANK (FIVE)) 5)
                               ((RANK (FOUR)) 4)
                               ((RANK (THREE)) 3)
                               ((RANK (TWO)) 2)
                               ))


      (shuffle (game vloc A))

      (all player 'P
            (repeat 10
               (move (top (game vloc A))
                     (top ('P vloc B))))

         ))
      )


( stage player 
	( end 
		( == 
			( top 
				( 
					( current player ) vloc A ) ) 
			( bottom 
				( 
					( current player ) vloc B ) ) ) ) 
	( stage player 
		( end 
			( != 
				( top 
					( 
						( next player ) vloc B ) ) 
				( top 
					( 
						( current player ) vloc A ) ) ) ) 
		( stage player 
			( end 
				( != 
					( bottom 
						( 
							( next player ) vloc C ) ) 
					( top 
						( game vloc B ) ) ) ) 
			( stage player 
				( end 
					( != 
						( next player ) 
						( current player ) ) ) 
				( let 
					( game vloc A ) 'HNECW 
					( any player 'HOJJK 
						( 
							( == 
								( next player ) 
								( current player ) ) 
							( all 
								( game vloc B ) 'ZEKZF 
								( == 
									( top 
										( 
											( current player ) vloc B ) ) 
									( bottom 'HNECW ) ) ) ) ) ) ) 
			( choice 
				( 
					( any player 'LSASI 
						( 'LSASI vloc A ) ) ) ) 
			( let player 'RFIVE 
				( let player 'ANSCJ 
					( 
						( == 
							( bottom 
								( 'RFIVE vloc C ) ) 
							( bottom 
								( 
									( next player ) vloc A ) ) ) 
						( do 
							( 
								( 
									( != 
										( current player ) 
										( next player ) ) 
									( do 
										( 
											( all 
												( 
													( current player ) vloc B ) 'GGPBN 
												( == 
													( bottom 'GGPBN ) 
													( top 
														( game vloc C ) ) ) ) 
											( any 
												( 
													( next player ) vloc C ) 'QIMII 
												( game sto POINTS ) ) ) ) ) ) ) ) ) ) ) 
		( stage player 
			( end 
				( == 
					( next player ) 
					( current player ) ) ) 
			( all 
				( game vloc C ) 'WOEST 
				( game sto POINTS ) ) 
			( let 
				( size 
					( game vloc A ) ) 'RRTCV 
				( do 
					( 
						( 
							( != 
								( current player ) 
								( current player ) ) 
							( move ( top ( game vloc A ) )( top ( ( current player ) vloc A ) ) ) ) 
						( 
							( == 
								( bottom 
									( 
										( next player ) vloc A ) ) 
								( bottom 
									( game vloc A ) ) ) 
							( let 6 'CNIXQ 
								( do 
									( 
										( all player 'GWMDR 
											( 
												( next player ) vloc A ) ) ) ) ) ) ) ) ) ) 
		( stage player 
			( end 
				( != 
					( current player ) 
					( current player ) ) ) 
			( all player 'OSLMX 
				( move ( top ( game vloc A ) )( top ( ( current player ) vloc B ) )) ) ) ) 
	( stage player 
		( end 
			( == 
				( current player ) 
				( current player ) ) ) 
		( any 
			( game vloc C ) 'ODDXD 
			( 
				( != 
					( next player ) 
					( next player ) ) 
				( any player 'XFHXO 
					( 
						( next player ) sto POINTS ) ) ) ) ) 
	( let 
		( game vloc B ) 'ZEHIU 
		( all 'ZEHIU 'BJTCV 
			( != 
				( bottom 'BJTCV ) 
				( top 
					( game vloc A ) ) ) ) ) 
	( stage player 
		( end 
			( == 
				( next player ) 
				( current player ) ) ) 
		( let player 'QAJPW 
			( set 
				( 
					( next player ) sto POINTS ) 
				( size 
					( game vloc C ) ) ) ) ) ) 
(scoring min ((current player) sto A))
   )