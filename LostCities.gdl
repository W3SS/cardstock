;; Lost Cities in the GDL
(game

   (setup 
      ;; Set up the players, 2 teams of 2 players, alternating
      (create players 2)
      (create teams (0) (1))
      ;; Create the deck source
      (create deck (game loc STOCK) (deck (rank (2, 3, 4, 5, 6, 7, 8, 9, 10))
                                                     (color (white, blue, green, red, yellow))))
      (create deck (game loc STOCK) (deck 3 (rank (HS))
                                                     (color (white, blue, green, red, yellow))))
   )
   (comp (()
          (set (game sto ROUNDS) 0)
          ;; solidfy card recedence
                 (initialize points PRECEDENCE (
                               
                               (all (rank (10)) 10)
                               (all (rank (9)) 9)
                               (all (rank (8)) 8)
                               (all (rank (7)) 7)
                               (all (rank (6)) 6)
                               (all (rank (5)) 5)
                               (all (rank (4)) 4)
                               (all (rank (3)) 3)
                               (all (rank (2)) 2)
                               )
                               )
                 (initialize points MULTIPLIER (
                                                
                                                (all (rank (HS)) 1)
                                                )
                             )
                 )
         )       
   ;; Stages of the game
   (stage player
      (end (== (game sto ROUNDS) 3))
      (comp (() (shuffle (game loc STOCK))
                (move (top (game loc STOCK))
                      (top ((all player) loc HAND)) 8)
             )
      ) 
         
      
      ;; players play a hand once
      (stage player
             (end (== (size (game loc STOCK)) 0))
             
             (choice
              
              
              
              ;; if following player and cannot follow suit
              ;;   play any card, and end your turn
              ((> (size ((current player) loc HAND where (all (== (cardatt color each) green)))) 0)
                    
               (move (any ((current player) loc HAND where (all (== (cardatt color each) green)))) 
                     (top (game loc GREEN))))
              
              ( (> (size ((current player) loc HAND where (all (== (cardatt color each) yellow)))) 0)
                    
               (move (any ((current player) loc HAND where (all (== (cardatt color each) yellow)))) 
                     (top (game loc YELLOW))))
              
              ( (> (size ((current player) loc HAND where (all (== (cardatt color each) white))))  0)
                    
               (move (any ((current player) loc HAND where (all (== (cardatt color each) white)))) 
                     (top (game loc WHITE))))
              
              ( (> (size ((current player) loc HAND where (all (== (cardatt color each) red)))) 0)
                    
               (move (any ((current player) loc HAND where (all (== (cardatt color each) red)))) 
                     (top (game loc RED))))
              
              ( (> (size ((current player) loc HAND where (all (== (cardatt color each) blue)))) 0)
                    
               (move (any ((current player) loc HAND where (all (== (cardatt color each) blue)))) 
                     (top (game loc BLUE))))
              
              
              
               ((and (== (size ((current player) loc GREEN)) 0)
                
                    (> (size ((current player) loc HAND where (all (== (cardatt color each) green))) ) 0))
                    
               (move (any ((current player) loc HAND where (all (== (cardatt color each) green)))) 
                     (top ((current player) loc GREEN))))
               
               ((and (== (size ((current player) loc YELLOW)) 0)
                
                    (> (size ((current player) loc HAND where (all (== (cardatt color each) yellow))) ) 0))
                    
               (move (any ((current player) loc HAND where (all (== (cardatt color each) yellow)))) 
                     (top ((current player) loc YELLOW))))
               
               
               ((and (== (size ((current player) loc WHITE)) 0)
                
                    (> (size ((current player) loc HAND where (all (== (cardatt color each) white))) ) 0))
                    
               (move (any ((current player) loc HAND where (all (== (cardatt color each) white)))) 
                     (top ((current player) loc WHITE))))
               
               
               ((and (== (size ((current player) loc RED)) 0)
                
                    (> (size ((current player) loc HAND where (all (== (cardatt color each) red))) ) 0))
                    
               (move (any ((current player) loc HAND where (all (== (cardatt color each) red)))) 
                     (top ((current player) loc RED))))
               
               ((and (== (size ((current player) loc BLUE)) 0)
                
                    (> (size ((current player) loc HAND where (all (== (cardatt color each) blue))) ) 0))
                    
               (move (any ((current player) loc HAND where (all (== (cardatt color each) blue)))) 
                     (top ((current player) loc BLUE))))
               
              
              ((and (> (size ((current player) loc GREEN)) 0)
                
                    (> (size ((current player) loc HAND where (all (== (cardatt color each) green)
                                                               (> (score each using PRECEDENCE)
                                                                  (score (top ((current player) loc GREEN)) using PRECEDENCE)))) ) 0))
                    
                    
                    
               (move (any ((current player) loc HAND where (all (== (cardatt color each) green)
                                                               (> (score each using PRECEDENCE)
                                                                  (score (top ((current player) loc GREEN)) using PRECEDENCE))))) 
                     (top ((current player) loc GREEN))))
              
              ((and (> (size ((current player) loc YELLOW)) 0)
                    (> (size ((current player) loc HAND where (all (== (cardatt color each) yellow)
                                                               (> (score each using PRECEDENCE)
                                                                  (score (top ((current player) loc YELLOW)) using PRECEDENCE)))) ) 0))
                    
                    
               (move (any ((current player) loc HAND where (all (== (cardatt color each) yellow)
                                                               (> (score each using PRECEDENCE)
                                                                  (score (top ((current player) loc YELLOW)) using PRECEDENCE))))) 
                     (top ((current player) loc YELLOW))))
              
              ((and (> (size ((current player) loc WHITE)) 0)
                    (> (size ((current player) loc HAND where (all (== (cardatt color each) white)
                                                               (> (score each using PRECEDENCE)
                                                                  (score (top ((current player) loc WHITE)) using PRECEDENCE)))) ) 0))
                    
                    
               (move (any ((current player) loc HAND where (all (== (cardatt color each) white)
                                                               (> (score each using PRECEDENCE)
                                                                  (score (top ((current player) loc WHITE)) using PRECEDENCE))))) 
                     (top ((current player) loc WHITE))))
              
              ((and (> (size ((current player) loc RED)) 0)
                    (> (size ((current player) loc HAND where (all (== (cardatt color each) red)
                                                               (> (score each using PRECEDENCE)
                                                                  (score (top ((current player) loc RED)) using PRECEDENCE)))) ) 0))
                    
                    
               (move (any ((current player) loc HAND where (all (== (cardatt color each) red)
                                                               (> (score each using PRECEDENCE)
                                                                  (score (top ((current player) loc RED)) using PRECEDENCE))))) 
                     (top ((current player) loc RED))))
              
              ((and (> (size ((current player) loc BLUE)) 0) 
                    (> (size ((current player) loc HAND where (all (== (cardatt color each) blue)
                                                               (> (score each using PRECEDENCE)
                                                                  (score (top ((current player) loc BLUE)) using PRECEDENCE)))) ) 0))
                    
                    
               (move (any ((current player) loc HAND where (all (== (cardatt color each) blue)
                                                               (> (score each using PRECEDENCE)
                                                                  (score (top ((current player) loc BLUE)) using PRECEDENCE))))) 
                     (top ((current player) loc BLUE))))
              
         )
         (choice 
         (()
         (move (top (game loc STOCK))
               (top ((current player) loc HAND))))
          ((> (size (game loc GREEN)) 0)
           (move (top (game loc GREEN))
                 (top ((current player) loc HAND))))
          ((> (size (game loc YELLOW)) 0)
           (move (top (game loc YELLOW))
                 (top ((current player) loc HAND))))
          ((> (size (game loc RED)) 0)
           (move (top (game loc RED))
                 (top ((current player) loc HAND))))
          ((> (size (game loc BLUE)) 0)
           (move (top (game loc BLUE))
                 (top ((current player) loc HAND))))
          ((> (size (game loc WHITE)) 0)
           (move (top (game loc WHITE))
                 (top ((current player) loc HAND))))
          )
           
         ;; after players play hand, computer wraps up trick
         
       )
      (stage player ;;scoring
         (end (== ((all player) sto PROC) 1))
         (comp
          ((> (size ((current player) loc GREEN)) 0)
         (inc ((current player) sto SCORE) (* (- (sum ((current player) loc GREEN) using PRECEDENCE) 20) (+ (sum ((current player) loc GREEN) using MULTIPLIER) 1)))
         )
         ((> (size ((current player) loc YELLOW)) 0)
         (inc ((current player) sto SCORE) (* (- (sum ((current player) loc YELLOW) using PRECEDENCE) 20) (+ (sum ((current player) loc YELLOW) using MULTIPLIER) 1)))
         )
         ((> (size ((current player) loc WHITE)) 0)
         (inc ((current player) sto SCORE) (* (- (sum ((current player) loc WHITE) using PRECEDENCE) 20) (+ (sum ((current player) loc WHITE) using MULTIPLIER) 1)))
         )
         ((> (size ((current player) loc RED)) 0)
         (inc ((current player) sto SCORE) (* (- (sum ((current player) loc RED) using PRECEDENCE) 20) (+ (sum ((current player) loc RED) using MULTIPLIER) 1)))
         )
         ((> (size ((current player) loc BLUE)) 0)
         (inc ((current player) sto SCORE) (* (- (sum ((current player) loc BLUE) using PRECEDENCE) 20) (+ (sum ((current player) loc BLUE) using MULTIPLIER) 1)))
         )
         (()
             (set ((current player) sto PROC) 1)
             (move (top ((current player) loc HAND))
                  (top (game loc STOCK)) all)
            (move (top ((current player) loc GREEN))
                  (top (game loc STOCK)) all)
              (move (top ((current player) loc YELLOW))
                  (top (game loc STOCK)) all)
                  (move (top ((current player) loc WHITE))
                  (top (game loc STOCK)) all)
                  (move (top ((current player) loc RED))
                  (top (game loc STOCK)) all)
                  (move (top ((current player) loc BLUE))
                  (top (game loc STOCK)) all)
         )
         )
          )
         (comp
            (()
            (move (top (game loc GREEN))
                  (top (game loc STOCK)) all)
              (move (top (game loc YELLOW))
                  (top (game loc STOCK)) all)
                  (move (top (game loc WHITE))
                  (top (game loc STOCK)) all)
                  (move (top (game loc RED))
                  (top (game loc STOCK)) all)
                  (move (top (game loc BLUE))
                  (top (game loc STOCK)) all)
            (inc (game sto ROUNDS) 1)
            (set ((all player) sto PROC) 0)
            )
         )
      )
      
       
   
   (scoring max ((current player) sto SCORE))
)
         
         
      
