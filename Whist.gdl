;; Whist in the GDL
(game

   (comp (() 

             ;; Set up the players, 2 teams of 2 players, alternating
             (create players 4)
             (create teams 2 alternate)

             ;; Game Locations and Storage
             (create loc game (SOURCE List)
                              (STOCK Stack)
                              (DISCARD Stack)
                              (TRUMP Stack Memory)
                              (LEAD Stack Memory))


             ;; Player Locations and Storage
             (create loc player (HAND List)
                                (TRICK Stack))
             (create sto player (BID, TRICKSWON))

             ;; Team Locations and Storage
             (create sto team (SCORE))
             
             ;; Create the deck source
             (initialize (game loc DISCARD) (permdeck (rank (A, 2, 3, 4, 5, 6, 7, 8, 9, 10, J, Q, K))
                                                     (color (red (suit (hearts, diamonds)))
                                                            (black (suit (clubs, spades))))))
         )
   )
               
   ;; Stages of the game
   (stage player
      (end (>= ((any team) sto SCORE) 7))
      (comp (() (move (top (game loc DISCARD)) 
                      (top (game loc STOCK)) all)
                (shuffle (game loc STOCK))
                (move (top (game loc STOCK))
                      (top ((all player) loc HAND)) 13)
                (set ((all player) sto TRICKSWON) 0)
                (copy (top ((current player) loc HAND))
                      (top (game loc TRUMP)))
             )
      ) 
         
      ;; players play a round 13 times     
      (stage player
         (end (== (size ((all player) loc HAND)) 0))
                    
         ;; players play a hand once
         (stage player
            (end (> (size ((all player) loc TRICK)) 0))
             
            (choice

               ;; if following player and cannot follow suit
               ;;   play any card, and end your turn
               ((and (== (size (game loc LEAD)) 1)
                     (== (size ((current player) loc HAND where (== (cardatt suit this) 
                                                                    (cardatt suit (top (game loc LEAD)))))) 0))
                (move (any ((current player) loc HAND)) 
                      (top ((current player) loc TRICK))))

               ;; if following player and can follow suit
               ;;   play any card that follows suit, and end your turn
               ((and (== (size (game loc LEAD)) 1)
                     (!= (size ((current player) loc HAND where (== (cardatt suit this) 
                                                                    (cardatt suit (top (game loc LEAD)))))) 0))
                (move (any ((current player) loc HAND where (== (cardatt suit this) 
                                                                (cardatt suit (top (game loc LEAD)))))) 
                      (top ((current player) loc TRICK))))
                      
               ;; if first player, play any card, remember it in the lead spot, and end your turn
               ((and (== (size (game loc LEAD)) 0)
                     (== (game sto BROKEN) 1)) 
                (move (any ((current player) loc HAND)) 
                      (top ((current player) loc TRICK)))
                (copy (top ((current player) loc TRICK)) 
                      (top (game loc LEAD))))
                      
           )
         )
              
         ;; after players play hand, computer wraps up trick
         (comp
             (() 
                 ;; solidfy card recedence
                 (initialize points PRECEDENCE (
                               (all (suit (cardatt suit (top (game loc TRUMP)))) 200)
                               (all (suit (cardatt suit (top (game loc LEAD)))) 100)
                               (all (rank (A)) 14)
                               (all (rank (K)) 13) 
                               (all (rank (Q)) 12)
                               (all (rank (J)) 11)
                               (all (rank (10)) 10)
                               (all (rank (9)) 9)
                               (all (rank (8)) 8)
                               (all (rank (7)) 7)
                               (all (rank (6)) 6)
                               (all (rank (5)) 5)
                               (all (rank (4)) 4)
                               (all (rank (3)) 3)
                               (all (rank (2)) 2)
                               )
                               )             
                      
                 ;; determine who won the hand, set them first next time, and give them a point
                 (remove (top (game loc LEAD)))
                 (set next (owner (max (union ((all player) loc TRICK)) using PRECEDENCE)))
                 (inc ((next player) sto TRICKSWON) 1)

             )
                                    
             ;; discard all the played cards
             (() (move (top ((all player) loc TRICK)) 
                       (top (game loc DISCARD))))
             
         )
      )
         
      ;; determine team score
      (stage team
         (end (== ((all player) sto TRICKSWON) 0))
         (comp
          
            ;; team made their cumulative bid, score positive points
            ((> (sum (((current team) player) sto TRICKSWON)) 
                6)
             (inc ((current team) sto SCORE) (- (sum (((current team) player) sto TRICKSWON)) 
                6))
            )
            (()
             (set (((current team) player) sto TRICKSWON) 0))
         )
      )
   )
)
         
         
      
